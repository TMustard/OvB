@import url("https://fonts.googleapis.com/css?family=Saira+Extra+Condensed");
body, html {
    /* max-height: 100vh; */
    /* max-width: 100vw; */
    /* overflow: hidden; */
   font-family: "Saira Extra Condensed"; 
   margin: 0;
   padding: 0; 
   /* height: 100vh; */
   /* background-color: #ededed; */
   max-width: 100vw; 
   background-color: rgb(51,51,51);

   
}

.site-wrapper {
    display: flex;
    flex-flow: column;
    /* justify-content: flex-start; */
    align-items: center;
    /* text-align: center; */
}

p {
    font-size: 1.6rem;
}

.container-1 {
    /* padding: 0; */
    /* position: fixed;
   top: 2vh;  */
  /* display: block;  */
  -webkit-clip-path: inset(0 0 35% 0);
  clip-path: inset(0 0 35% 0);
  height: 15rem;
  width: 35rem;
  max-width: 100vw;
  background-color: rgb(51,51,51);
  /* border-radius: 50%; */
  /* box-shadow: 10px 5px 5px red; */
}

.container-2 {
    /* display: block;   */
    position: fixed;
   top: 30vh; 
    /* -webkit-clip-path: inset(33% 0 0 0);
clip-path: inset(33% 0 0 0); */
    /* clip-path: polygon(0 0, 100% 0, 80% 100%, 20% 100%);
    -webkit-clip-path: polygon(0 0, 100% 0, 80% 100%, 20% 100%); */
    height: 15rem;
    width: 35rem;
    /* background-color: rgb(51,51,51); */
    /* border-radius: 20%; */
  }

.container-3, .container-4, .container-5 {
    width: 100vw;
    height: 10vh;
  }

.container-3 {
    /* background-color: aqua; */
    z-index: 0;
    /* -webkit-clip-path: polygon(0 8%, 96% 11%, 100% 34%, 6% 76%);
clip-path: polygon(0 8%, 96% 11%, 100% 34%, 6% 76%); */
}

.OvBcontainer {
    /* border-style: solid; */
    border-color: aliceblue;
    max-width: 18vw;
    display: flex;
    flex-flow: column;
    align-items: center;
    justify-content: flex-start;
    z-index: 2;
    border-radius: 10%
}


@media (max-width: 768px) {
    .container-3 {
        width: 120vw;
    }
    .container-1, .container-2 {
        height: 12rem;
        width: 25rem;
    }
    .OvBcontainer {
        max-width: 40vw;
    }
}

.loader {
  /* position: absolute;   */
  /* max-width: 38vh; */
  /* width: 100%; */
  height: auto;
  stroke-linecap: round; 
  

}

.loader-bottom {
    background-color: rgb(51,51,51);
    -webkit-clip-path: inset(72% 0 0 0);
    clip-path: inset(72% 0 0 0);
}

circle {
  
  fill: none;
  stroke-width: 10;
  animation-name: preloader;
  animation-duration: 3s;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
  transform-origin: 170px 170px;
  will-change: transform; }
  circle:nth-of-type(1) {
    stroke-dasharray: 550px; }
  circle:nth-of-type(2) {
    stroke-dasharray: 500px; }
  circle:nth-of-type(3) {
    stroke-dasharray: 450px; }
  circle:nth-of-type(4) {
    stroke-dasharray: 300px; }
  circle:nth-of-type(1) {
    animation-delay: -0.15s; }
  circle:nth-of-type(2) {
    animation-delay: -0.3s; }
  circle:nth-of-type(3) {
    animation-delay: -0.45s; }
  circle:nth-of-type(4) {
    animation-delay: -0.6s; }

@keyframes preloader {
  50% {
    transform: rotate(360deg); } }

*,
*::before,
*::after {
  box-sizing: border-box; }

.nav-container {
   position: fixed;
   top: 90vh; 
  /* display: flex;
  flex-direction: column; */
  /* min-height: 100vh; */
  /* background-image: url("https://source.unsplash.com/1920x1080/?nature"); */
}

header {
  /* background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.75) -10%, rgba(0, 0, 0, 0) 100%); */
  text-align: center;
  padding: 0.5rem 0 5rem;
  font-size: 1.25rem; }

ul {
  list-style: none;
  margin: 0;
  padding: 0; }

li {
  display: inline-flex; }

a {
  position: relative;
  padding: 1rem 0 0.5rem;
  /* margin: 0 1.5rem; */
  color: white;
  text-decoration: none;
  text-transform: uppercase; }
  a::after {
    content: '';
    position: absolute;
    left: 50%;
    bottom: 0;
    transform: translateX(-50%) scaleX(0);
    transform-origin: 50% 50%;
    width: 100%;
    height: 1px;
    /* background-color: rgba(255, 255, 255, 0.8); */
    transition: transform 250ms; }
  a:hover::after {
    transform: translateX(-50%) scaleX(1); 
}

   

/* make keyframes that tell the start state and the end state of our object */
@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

.fade-in {
  opacity:0;  /* make things invisible upon start */
  -webkit-animation:fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  -moz-animation:fadeIn ease-in 1;
  animation:fadeIn ease-in 1;

  -webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  -moz-animation-fill-mode:forwards;
  animation-fill-mode:forwards;

  -webkit-animation-duration:1s;
  -moz-animation-duration:1s;
  animation-duration:1s;
}

.fade-in.one {
  -webkit-animation-delay: 0.7s;
  -moz-animation-delay: 0.7s;
  animation-delay: 0.7s;
}

.fade-in.two {
  -webkit-animation-delay: 1.2s;
  -moz-animation-delay:1.2s;
  animation-delay: 1.2s;
}

.fade-in.three {
  -webkit-animation-delay: 1.6s;
  -moz-animation-delay: 1.6s;
  animation-delay: 1.6s;
}

.fade-in.four {
    -webkit-animation-delay: 2.2s;
    -moz-animation-delay: 2.2s;
    animation-delay: 2.2s;
  }
